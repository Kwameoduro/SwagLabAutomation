name: SwagLabs Test Automation

on:
  push:
    branches: [ main ]

jobs:
  test:
    name: Run SwagLabs Selenium Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Java 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Cache Maven Dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Install Chrome
        uses: browser-actions/setup-chrome@v1

      - name: Setup ChromeDriver
        uses: nanasess/setup-chromedriver@master

      - name: Verify Environment
        run: |
          java -version
          mvn -version
          google-chrome --version
          chromedriver --version

      - name: Clean and Compile
        run: |
          mvn clean
          mvn compile test-compile

      - name: Run SwagLabs Tests
        continue-on-error: true
        run: mvn test -Dheadless=true -Dbrowser=chrome
        env:
          CHROME_OPTIONS: "--headless=new --no-sandbox --disable-dev-shm-usage --window-size=1920,1080"

      - name: Install Allure CLI
        run: |
          curl -o allure.tgz -L https://github.com/allure-framework/allure2/releases/download/2.27.0/allure-2.27.0.tgz
          tar -xvzf allure.tgz
          sudo mv allure-2.27.0 /opt/allure
          sudo ln -s /opt/allure/bin/allure /usr/bin/allure

      - name: Generate Allure Report
        if: always()
        run: |
          allure generate allure-results --clean -o allure-report

      - name: Upload Allure Report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: allure-report-${{ github.run_number }}
          path: allure-report/
          retention-days: 30

      - name: Upload Surefire Test Results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: surefire-reports-${{ github.run_number }}
          path: target/surefire-reports/
          retention-days: 30

      - name: Upload Screenshots
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: failure-screenshots-${{ github.run_number }}
          path: screenshots/
          retention-days: 7

      - name: Extract Failing Tests (if any)
        id: extract-failures
        if: failure()
        run: |
          echo "FAILURES<<EOF" >> $GITHUB_ENV
          grep -h "<testcase" target/surefire-reports/*.xml | grep -B1 "<failure" | grep "classname" | sed -E 's/.*classname="([^"]+)".*name="([^"]+)".*/- \1.\2/' >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Generate Test Summary
        if: always()
        run: |
          echo "## SwagLabs Test Summary" >> $GITHUB_STEP_SUMMARY
          echo "- **Build Number:** ${{ github.run_number }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Commit:** ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Branch:** ${{ github.ref_name }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Status:** ${{ job.status }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          if [ -f target/surefire-reports/TEST-*.xml ]; then
            TESTS=$(find target/surefire-reports -name "TEST-*.xml" -exec grep -l "testcase" {} \; | wc -l)
            echo "- **Test Classes:** $TESTS" >> $GITHUB_STEP_SUMMARY
          fi

  notify:
    name: Send Slack Notification
    runs-on: ubuntu-latest
    needs: test
    if: always()

    steps:
      - name: Send Slack Notification
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ needs.test.result }}
          fields: repo,message,commit,author,action,eventName,ref,workflow
          text: |
            üß™ *SwagLabs Test Run - ${{ needs.test.result == 'success' && '‚úÖ PASSED' || '‚ùå FAILED' }}*

            ‚Ä¢ Repository: `${{ github.repository }}`
            ‚Ä¢ Branch: `${{ github.ref_name }}`
            ‚Ä¢ Commit: `${{ github.sha }}`
            ‚Ä¢ Author: `${{ github.actor }}`
            ‚Ä¢ Workflow: `${{ github.workflow }}`

            ${{ env.FAILURES }}

            üîó *[View Test Results ‚Üí](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})*

        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
